{"version":3,"file":"react-photo-view.modern.mjs","sources":["../src/hooks/useMethods.ts","../src/hooks/useSetState.ts","../src/photo-context.ts","../src/variables.ts","../src/utils/isTouchDevice.ts","../src/utils/limitTarget.ts","../src/hooks/useIsomorphicLayoutEffect.ts","../src/hooks/useEventListener.ts","../src/components/SlidePortal.tsx","../src/components/CloseIcon.tsx","../src/components/ArrowLeft.tsx","../src/components/ArrowRight.tsx","../src/components/PreventScroll.tsx","../src/utils/getMultipleTouchPosition.ts","../src/utils/edgeHandle.ts","../src/utils/getPositionOnMoveOrScale.ts","../src/utils/getRotateSize.ts","../src/utils/getSuitableImageSize.ts","../src/hooks/useDebounceCallback.ts","../src/hooks/useScrollPosition.ts","../src/hooks/useAnimationOrigin.tsx","../src/hooks/useMountedRef.ts","../src/components/Spinner.tsx","../src/Photo.tsx","../src/PhotoBox.tsx","../src/hooks/useContinuousTap.ts","../src/hooks/useAnimationPosition.ts","../src/hooks/useTargetScale.ts","../src/PhotoSlider.tsx","../src/hooks/useAnimationVisible.tsx","../src/hooks/useForkedVariable.ts","../src/hooks/useAdjacentImages.ts","../src/PhotoProvider.tsx","../src/PhotoView.tsx","../src/hooks/useInitial.ts"],"sourcesContent":["import { useRef } from 'react';\r\n\r\n/**\r\n * Hook of persistent methods\r\n */\r\nexport default function useMethods<T extends Record<string, (...args: any[]) => any>>(fn: T) {\r\n  const { current } = useRef({\r\n    fn,\r\n    curr: undefined as T | undefined,\r\n  });\r\n  current.fn = fn;\r\n\r\n  if (!current.curr) {\r\n    const curr = Object.create(null);\r\n    Object.keys(fn).forEach((key) => {\r\n      curr[key] = (...args: unknown[]) => current.fn[key].call(current.fn, ...args);\r\n    });\r\n    current.curr = curr;\r\n  }\r\n\r\n  return current.curr as T;\r\n}\r\n","import { useReducer } from 'react';\r\n\r\nexport default function useSetState<S extends Record<string, any>>(initialState: S) {\r\n  return useReducer(\r\n    (state: S, action: Partial<S> | ((state: S) => Partial<S>)) => ({\r\n      ...state,\r\n      ...(typeof action === 'function' ? action(state) : action),\r\n    }),\r\n    initialState,\r\n  );\r\n}\r\n","import { createContext } from 'react';\r\nimport type { DataType } from './types';\r\n\r\nexport type UpdateItemType = (dataType: DataType) => void;\r\n\r\nexport interface PhotoContextType {\r\n  show: (key: number) => void;\r\n  update: UpdateItemType;\r\n  remove: (key: number) => void;\r\n  nextId: () => number;\r\n}\r\n\r\nexport default createContext<PhotoContextType>(undefined as unknown as PhotoContextType);\r\n","/**\r\n * 最大触摸时间\r\n */\r\nexport const maxTouchTime = 200;\r\n\r\n/**\r\n * 默认动画速度\r\n */\r\nexport const defaultSpeed = 400;\r\n\r\n/**\r\n * 默认动画函数\r\n */\r\nexport const defaultEasing = 'cubic-bezier(0.25, 0.8, 0.25, 1)';\r\n\r\n/**\r\n * 最大滑动切换图片距离\r\n */\r\nexport const maxMoveOffset = 40;\r\n\r\n/**\r\n * 图片的间隔\r\n */\r\nexport const horizontalOffset = 20;\r\n\r\n/**\r\n * 最小初始响应距离\r\n */\r\nexport const minStartTouchOffset = 20;\r\n\r\n/**\r\n * 默认背景透明度\r\n */\r\nexport const defaultOpacity = 1;\r\n\r\n/**\r\n * 最小缩放度\r\n */\r\nexport const minScale = 1;\r\n\r\n/**\r\n * 最大缩放度（若图片足够大，则会超出）\r\n */\r\nexport const maxScale = 6;\r\n\r\n/**\r\n * 最小长图模式比例\r\n */\r\nexport const longModeRatio = 3;\r\n\r\n/**\r\n * 缩放弹性缓冲\r\n */\r\nexport const scaleBuffer = 0.2;\r\n\r\n/**\r\n * 最大等待动画时间\r\n */\r\nexport const maxWaitAnimationTime = 250;\r\n","/**\r\n * 是否支持触摸设备\r\n */\r\nconst isTouchDevice = typeof window !== 'undefined' && 'ontouchstart' in window;\r\n\r\nexport default isTouchDevice;\r\n","import { maxScale, minScale } from '../variables';\r\n\r\nexport const limitNumber = (value: number, min: number, max: number) => {\r\n  return Math.max(Math.min(value, max), min);\r\n};\r\n\r\n/**\r\n * 限制最大/最小缩放\r\n */\r\nexport const limitScale = (scale: number, max: number = 0, buffer: number = 0) => {\r\n  return limitNumber(scale, minScale * (1 - buffer), Math.max(maxScale, max) * (1 + buffer));\r\n};\r\n","import { useEffect, useLayoutEffect } from 'react';\r\n\r\nconst isSSR = typeof window === 'undefined' || /ServerSideRendering/.test(navigator && navigator.userAgent);\r\n\r\nexport default isSSR ? useEffect : useLayoutEffect;\r\n","import { useEffect, useRef } from 'react';\r\n\r\nexport default function useEventListener<K extends keyof WindowEventMap>(\r\n  type: K | undefined,\r\n  fn: (evt: WindowEventMap[K]) => void,\r\n  options?: AddEventListenerOptions,\r\n) {\r\n  const latest = useRef(fn);\r\n  latest.current = fn;\r\n\r\n  useEffect(() => {\r\n    function wrapper(evt: WindowEventMap[K]) {\r\n      latest.current(evt);\r\n    }\r\n    if (type) {\r\n      window.addEventListener(type, wrapper, options);\r\n    }\r\n    return () => {\r\n      if (type) {\r\n        window.removeEventListener(type, wrapper);\r\n      }\r\n    };\r\n  }, [type]);\r\n}\r\n","import React from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport './SlidePortal.less';\r\n\r\nexport interface ISliderPortalProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  container?: HTMLElement;\r\n}\r\n\r\nfunction SlidePortal({ container = document.body, ...rest }: ISliderPortalProps) {\r\n  return createPortal(<div {...rest} />, container);\r\n}\r\n\r\nexport default SlidePortal;\r\n","import React from 'react';\r\n\r\nfunction CloseIcon(props: React.HTMLAttributes<SVGElement>) {\r\n  return (\r\n    <svg width=\"44\" height=\"44\" viewBox=\"0 0 768 768\" {...props}>\r\n      <path d=\"M607.5 205.5l-178.5 178.5 178.5 178.5-45 45-178.5-178.5-178.5 178.5-45-45 178.5-178.5-178.5-178.5 45-45 178.5 178.5 178.5-178.5z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default CloseIcon;\r\n","import React from 'react';\r\n\r\nfunction ArrowLeft(props: React.HTMLAttributes<SVGElement>) {\r\n  return (\r\n    <svg width=\"44\" height=\"44\" viewBox=\"0 0 768 768\" {...props}>\r\n      <path d=\"M640.5 352.5v63h-390l178.5 180-45 45-256.5-256.5 256.5-256.5 45 45-178.5 180h390z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default ArrowLeft;\r\n","import React from 'react';\r\n\r\nfunction ArrowRight(props: React.HTMLAttributes<SVGElement>) {\r\n  return (\r\n    <svg width=\"44\" height=\"44\" viewBox=\"0 0 768 768\" {...props}>\r\n      <path d=\"M384 127.5l256.5 256.5-256.5 256.5-45-45 178.5-180h-390v-63h390l-178.5-180z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default ArrowRight;\r\n","import { useEffect } from 'react';\r\n\r\nexport default function PreventScroll() {\r\n  useEffect(() => {\r\n    const { style } = document.body;\r\n    const lastOverflow = style.overflow;\r\n    style.overflow = 'hidden';\r\n\r\n    return () => {\r\n      style.overflow = lastOverflow;\r\n    };\r\n  }, []);\r\n\r\n  return null;\r\n}\r\n","import type React from 'react';\r\n\r\n/**\r\n * 从 Touch 事件中获取两个触控中心位置\r\n */\r\nexport default function getMultipleTouchPosition(\r\n  evt: TouchEvent | React.TouchEvent,\r\n): [clientX: number, clientY: number, touchLength: number] {\r\n  const { clientX, clientY } = evt.touches[0];\r\n  if (evt.touches.length >= 2) {\r\n    const { clientX: nextClientX, clientY: nextClientY } = evt.touches[1];\r\n    return [\r\n      (clientX + nextClientX) / 2,\r\n      (clientY + nextClientY) / 2,\r\n      Math.sqrt((nextClientX - clientX) ** 2 + (nextClientY - clientY) ** 2),\r\n    ];\r\n  }\r\n  return [clientX, clientY, 0];\r\n}\r\n","import type { CloseEdgeType, ReachType, TouchStartType } from '../types';\r\n\r\n/**\r\n * 获取接触边缘类型\r\n */\r\nexport const getReachType = (\r\n  initialTouchState: TouchStartType,\r\n  horizontalCloseEdge: CloseEdgeType,\r\n  verticalCloseEdge: CloseEdgeType,\r\n  reachPosition: ReachType,\r\n): ReachType => {\r\n  if ((horizontalCloseEdge && initialTouchState === 1) || reachPosition === 'x') {\r\n    return 'x';\r\n  }\r\n  if ((verticalCloseEdge && initialTouchState > 1) || reachPosition === 'y') {\r\n    return 'y';\r\n  }\r\n  return undefined;\r\n};\r\n\r\n/**\r\n * 计算接触边缘位置\r\n * @param position - x/y\r\n * @param scale\r\n * @param size - width/height\r\n * @param innerSize - innerWidth/innerHeight\r\n * @return [CloseEdgeType, position]\r\n */\r\nexport const computePositionEdge = (position: number, scale: number, size: number, innerSize: number) => {\r\n  const currentWidth = size * scale;\r\n  // 图片超出的宽度\r\n  const outOffset = (currentWidth - innerSize) / 2;\r\n  let closedEdge: CloseEdgeType;\r\n\r\n  let current = position;\r\n  if (currentWidth <= innerSize) {\r\n    closedEdge = 1;\r\n    current = 0;\r\n  } else if (position > 0 && outOffset - position <= 0) {\r\n    closedEdge = 2;\r\n    current = outOffset;\r\n  } else if (position < 0 && outOffset + position <= 0) {\r\n    closedEdge = 3;\r\n    current = -outOffset;\r\n  }\r\n\r\n  return [closedEdge, current] as const;\r\n};\r\n","import { longModeRatio } from '../variables';\r\nimport { computePositionEdge } from './edgeHandle';\r\n\r\n/**\r\n * 获取移动或缩放之后的中心点\r\n */\r\nexport default function getPositionOnMoveOrScale(\r\n  x: number,\r\n  y: number,\r\n  width: number,\r\n  height: number,\r\n  scale: number,\r\n  toScale: number,\r\n  clientX: number = innerWidth / 2,\r\n  clientY: number = innerHeight / 2,\r\n  offsetX: number = 0,\r\n  offsetY: number = 0,\r\n) {\r\n  // 是否接触边缘\r\n  const [closedEdgeX] = computePositionEdge(x, toScale, width, innerWidth);\r\n  const [closedEdgeY] = computePositionEdge(y, toScale, height, innerHeight);\r\n\r\n  const centerClientX = innerWidth / 2;\r\n  const centerClientY = innerHeight / 2;\r\n\r\n  // 坐标偏移\r\n  const lastPositionX = centerClientX + x;\r\n  const lastPositionY = centerClientY + y;\r\n\r\n  // 偏移位置\r\n  const originX = clientX - (clientX - lastPositionX) * (toScale / scale) - centerClientX;\r\n  const originY = clientY - (clientY - lastPositionY) * (toScale / scale) - centerClientY;\r\n  // 长图模式无左右反馈\r\n  const longModeEdge = height / width >= longModeRatio && width * toScale === innerWidth;\r\n  // 超出边缘距离减半\r\n  return {\r\n    x: originX + (longModeEdge ? 0 : closedEdgeX ? offsetX / 2 : offsetX),\r\n    y: originY + (closedEdgeY ? offsetY / 2 : offsetY),\r\n    lastCX: clientX,\r\n    lastCY: clientY,\r\n  };\r\n}\r\n","/**\r\n * 获取旋转后的宽高\r\n */\r\nexport default function getRotateSize(rotate: number, width: number, height: number) {\r\n  const isVertical = rotate % 180 !== 0;\r\n\r\n  // 若图片不是水平则调换属性\r\n  if (isVertical) {\r\n    return [height, width, isVertical] as const;\r\n  }\r\n\r\n  return [width, height, isVertical] as const;\r\n}\r\n","import { longModeRatio } from '../variables';\r\nimport getRotateSize from './getRotateSize';\r\n\r\n/**\r\n * 获取图片合适的大小\r\n */\r\nexport default function getSuitableImageSize(naturalWidth: number, naturalHeight: number, rotate: number) {\r\n  const [currentWidth, currentHeight, isVertical] = getRotateSize(rotate, innerWidth, innerHeight);\r\n\r\n  let y = 0;\r\n  let width = currentWidth;\r\n  let height = currentHeight;\r\n\r\n  // 自适应宽高\r\n  const autoWidth = (naturalWidth / naturalHeight) * currentHeight;\r\n  const autoHeight = (naturalHeight / naturalWidth) * currentWidth;\r\n\r\n  if (naturalWidth < currentWidth && naturalHeight < currentHeight) {\r\n    width = naturalWidth;\r\n    height = naturalHeight;\r\n  } else if (naturalWidth < currentWidth && naturalHeight >= currentHeight) {\r\n    width = autoWidth;\r\n  } else if (naturalWidth >= currentWidth && naturalHeight < currentHeight) {\r\n    height = autoHeight;\r\n  } else if (naturalWidth / naturalHeight > currentWidth / currentHeight) {\r\n    height = autoHeight;\r\n  }\r\n  // 长图模式\r\n  else if (naturalHeight / naturalWidth >= longModeRatio && !isVertical) {\r\n    height = autoHeight;\r\n    y = (height - currentHeight) / 2;\r\n  } else {\r\n    width = autoWidth;\r\n  }\r\n  return {\r\n    width,\r\n    height,\r\n    x: 0,\r\n    y,\r\n    pause: true,\r\n  };\r\n}\r\n","import { useCallback, useRef } from 'react';\r\n\r\ninterface DebounceCallback<CallbackArguments extends any[]> {\r\n  (...args: CallbackArguments): void;\r\n  cancel: () => void;\r\n}\r\n\r\nexport default function useDebounceCallback<CallbackArguments extends any[]>(\r\n  callback: (...args: CallbackArguments) => void,\r\n  {\r\n    leading = false,\r\n    maxWait,\r\n    wait = maxWait || 0,\r\n  }: {\r\n    leading?: boolean;\r\n    maxWait?: number;\r\n    wait?: number;\r\n  },\r\n): DebounceCallback<CallbackArguments> {\r\n  const callbackRef = useRef(callback);\r\n  callbackRef.current = callback;\r\n\r\n  const prev = useRef(0);\r\n  const trailingTimeout = useRef<ReturnType<typeof setTimeout>>();\r\n  const clearTrailing = () => trailingTimeout.current && clearTimeout(trailingTimeout.current);\r\n\r\n  const fn = useCallback(\r\n    (...args: CallbackArguments) => {\r\n      const now = Date.now();\r\n\r\n      function call() {\r\n        prev.current = now;\r\n        clearTrailing();\r\n        callbackRef.current.apply(null, args);\r\n      }\r\n      const last = prev.current;\r\n      const offset = now - last;\r\n      // leading\r\n      if (last === 0) {\r\n        if (leading) {\r\n          call();\r\n        }\r\n        prev.current = now;\r\n      }\r\n\r\n      // body\r\n      if (maxWait !== undefined) {\r\n        if (offset > maxWait) {\r\n          call();\r\n          return;\r\n        }\r\n      } else if (offset < wait) {\r\n        prev.current = now;\r\n      }\r\n\r\n      // trailing\r\n      clearTrailing();\r\n      trailingTimeout.current = setTimeout(() => {\r\n        call();\r\n        prev.current = 0;\r\n      }, wait);\r\n    },\r\n    [wait, maxWait, leading],\r\n  );\r\n  (fn as DebounceCallback<CallbackArguments>).cancel = clearTrailing;\r\n\r\n  return fn as DebounceCallback<CallbackArguments>;\r\n}\r\n","import { computePositionEdge } from '../utils/edgeHandle';\r\nimport getPositionOnMoveOrScale from '../utils/getPositionOnMoveOrScale';\r\nimport getRotateSize from '../utils/getRotateSize';\r\nimport { defaultSpeed, maxTouchTime } from '../variables';\r\nimport useMethods from './useMethods';\r\n\r\n// 触边运动反馈\r\nconst rebound = (start: number, bound: number, callback: (spatial: number) => boolean) =>\r\n  easeOutMove(\r\n    start,\r\n    bound,\r\n    callback,\r\n    defaultSpeed / 4,\r\n    (t) => t,\r\n    () => easeOutMove(bound, start, callback),\r\n  );\r\n\r\n/**\r\n * 物理滚动到具体位置\r\n */\r\nexport default function useScrollPosition<C extends (spatial: number) => boolean>(\r\n  callbackX: C,\r\n  callbackY: C,\r\n  callbackS: C,\r\n) {\r\n  const callback = useMethods({\r\n    X: (spatial: number) => callbackX(spatial),\r\n    Y: (spatial: number) => callbackY(spatial),\r\n    S: (spatial: number) => callbackS(spatial),\r\n  });\r\n\r\n  return (\r\n    x: number,\r\n    y: number,\r\n    lastX: number,\r\n    lastY: number,\r\n    width: number,\r\n    height: number,\r\n    scale: number,\r\n    safeScale: number,\r\n    lastScale: number,\r\n    rotate: number,\r\n    touchedTime: number,\r\n  ) => {\r\n    const [currentWidth, currentHeight] = getRotateSize(rotate, width, height);\r\n    // 开始状态下边缘触发状态\r\n    const [beginEdgeX, beginX] = computePositionEdge(x, safeScale, currentWidth, innerWidth);\r\n    const [beginEdgeY, beginY] = computePositionEdge(y, safeScale, currentHeight, innerHeight);\r\n    const moveTime = Date.now() - touchedTime;\r\n\r\n    // 时间过长、超出安全范围的情况下不执行滚动逻辑，恢复安全范围\r\n    if (moveTime >= maxTouchTime || safeScale !== scale || Math.abs(lastScale - scale) > 1) {\r\n      // 计算中心缩放点\r\n      const { x: nextX, y: nextY } = getPositionOnMoveOrScale(x, y, width, height, scale, safeScale);\r\n      const targetX = beginEdgeX ? beginX : nextX !== x ? nextX : null;\r\n      const targetY = beginEdgeY ? beginY : nextY !== y ? nextY : null;\r\n\r\n      if (targetX !== null) {\r\n        easeOutMove(x, targetX, callback.X);\r\n      }\r\n      if (targetY !== null) {\r\n        easeOutMove(y, targetY, callback.Y);\r\n      }\r\n      if (safeScale !== scale) {\r\n        easeOutMove(scale, safeScale, callback.S);\r\n      }\r\n      return;\r\n    }\r\n\r\n    // 初始速度\r\n    const speedX = (x - lastX) / moveTime;\r\n    const speedY = (y - lastY) / moveTime;\r\n    const speedT = Math.sqrt(speedX ** 2 + speedY ** 2);\r\n    // 是否接触到边缘\r\n    let edgeX = false;\r\n    let edgeY = false;\r\n\r\n    scrollMove(speedT, (spatial) => {\r\n      const nextX = x + spatial * (speedX / speedT);\r\n      const nextY = y + spatial * (speedY / speedT);\r\n\r\n      const [isEdgeX, currentX] = computePositionEdge(nextX, scale, currentWidth, innerWidth);\r\n      const [isEdgeY, currentY] = computePositionEdge(nextY, scale, currentHeight, innerHeight);\r\n\r\n      if (isEdgeX && !edgeX) {\r\n        edgeX = true;\r\n        if (beginEdgeX) {\r\n          easeOutMove(nextX, currentX, callback.X);\r\n        } else {\r\n          rebound(currentX, nextX + (nextX - currentX), callback.X);\r\n        }\r\n      }\r\n\r\n      if (isEdgeY && !edgeY) {\r\n        edgeY = true;\r\n        if (beginEdgeY) {\r\n          easeOutMove(nextY, currentY, callback.Y);\r\n        } else {\r\n          rebound(currentY, nextY + (nextY - currentY), callback.Y);\r\n        }\r\n      }\r\n      // 同时接触边缘的情况下停止滚动\r\n      if (edgeX && edgeY) {\r\n        return false;\r\n      }\r\n\r\n      const resultX = edgeX || callback.X(currentX);\r\n      const resultY = edgeY || callback.Y(currentY);\r\n      return resultX && resultY;\r\n    });\r\n  };\r\n}\r\n\r\n// 加速度\r\nconst acceleration = -0.001;\r\n// 阻力\r\nconst resistance = 0.0002;\r\n\r\n/**\r\n * 通过速度滚动到停止\r\n */\r\nfunction scrollMove(initialSpeed: number, callback: (spatial: number) => boolean) {\r\n  let v = initialSpeed;\r\n  let s = 0;\r\n  let lastTime: number | undefined;\r\n  let frameId = 0;\r\n\r\n  const calcMove = (now: number) => {\r\n    if (!lastTime) {\r\n      lastTime = now;\r\n    }\r\n    const dt = now - lastTime;\r\n    const direction = Math.sign(initialSpeed);\r\n    const a = direction * acceleration;\r\n    const f = Math.sign(-v) * v ** 2 * resistance;\r\n    const ds = v * dt + ((a + f) * dt ** 2) / 2;\r\n    v += (a + f) * dt;\r\n\r\n    s += ds;\r\n    // move to s\r\n    lastTime = now;\r\n\r\n    if (direction * v <= 0) {\r\n      caf();\r\n      return;\r\n    }\r\n\r\n    if (callback(s)) {\r\n      raf();\r\n      return;\r\n    }\r\n    caf();\r\n  };\r\n  raf();\r\n\r\n  function raf() {\r\n    frameId = requestAnimationFrame(calcMove);\r\n  }\r\n  function caf() {\r\n    cancelAnimationFrame(frameId);\r\n  }\r\n}\r\n\r\n/**\r\n * 缓动函数\r\n */\r\nconst easeOutQuart = (x: number) => 1 - (1 - x) ** 4;\r\n\r\n/**\r\n * 缓动回调\r\n */\r\nfunction easeOutMove(\r\n  start: number,\r\n  end: number,\r\n  callback: (spatial: number) => boolean,\r\n  speed = defaultSpeed,\r\n  easing = easeOutQuart,\r\n  complete?: () => void,\r\n) {\r\n  const distance = end - start;\r\n  if (distance === 0) {\r\n    return;\r\n  }\r\n\r\n  const startTime = Date.now();\r\n  let frameId = 0;\r\n\r\n  const calcMove = () => {\r\n    const time = Math.min(1, (Date.now() - startTime) / speed);\r\n    const result = callback(start + easing(time) * distance);\r\n\r\n    if (result && time < 1) {\r\n      raf();\r\n      return;\r\n    }\r\n    cancelAnimationFrame(frameId);\r\n    if (time >= 1 && complete) {\r\n      complete();\r\n    }\r\n  };\r\n  raf();\r\n\r\n  function raf() {\r\n    frameId = requestAnimationFrame(calcMove);\r\n  }\r\n}\r\n","import type { Dispatch, MutableRefObject, SetStateAction } from 'react';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport type { EasingMode, OriginRectType } from '../types';\r\nimport useMethods from './useMethods';\r\nimport { maxWaitAnimationTime } from '../variables';\r\n\r\nconst initialRect: OriginRectType = {\r\n  T: 0,\r\n  L: 0,\r\n  W: 0,\r\n  H: 0,\r\n  // 图像填充方式\r\n  FIT: undefined,\r\n};\r\n\r\nexport default function useAnimationOrigin(\r\n  visible: boolean | undefined,\r\n  originRef: MutableRefObject<HTMLElement | null> | undefined,\r\n  loaded: boolean,\r\n  speed: number,\r\n  updateEasing: (pause: boolean) => void,\r\n): [\r\n  // 动画状态\r\n  easingMode: EasingMode,\r\n  originRect: OriginRectType,\r\n] {\r\n  const [originRect, updateOriginRect] = useState(initialRect);\r\n  // 动画状态\r\n  const [easingMode, updateEasingMode] = useState<EasingMode>(0);\r\n  const initialTime = useRef<number>();\r\n\r\n  const fn = useMethods({\r\n    OK: () => visible && updateEasingMode(4),\r\n  });\r\n\r\n  useEffect(() => {\r\n    // 记录初始打开的时间\r\n    if (!initialTime.current) {\r\n      initialTime.current = Date.now();\r\n    }\r\n    if (!loaded) {\r\n      return;\r\n    }\r\n    handleUpdateOrigin(originRef, updateOriginRect);\r\n    // 打开动画处理\r\n    if (visible) {\r\n      // 小于最大允许动画时间，则执行缩放动画\r\n      if (Date.now() - initialTime.current < maxWaitAnimationTime) {\r\n        updateEasingMode(1);\r\n        // 延时执行动画，保持 transition 生效\r\n        requestAnimationFrame(() => {\r\n          updateEasingMode(2);\r\n          requestAnimationFrame(() => handleToShape(3));\r\n        });\r\n        setTimeout(fn.OK, speed);\r\n        return;\r\n      }\r\n      // 超出则不执行\r\n      updateEasingMode(4);\r\n      return;\r\n    }\r\n    // 关闭动画处理\r\n    handleToShape(5);\r\n  }, [visible, loaded]);\r\n\r\n  function handleToShape(currentShape: EasingMode) {\r\n    updateEasing(false);\r\n    updateEasingMode(currentShape);\r\n  }\r\n\r\n  return [easingMode, originRect];\r\n}\r\n\r\n/**\r\n * 更新缩略图位置信息\r\n */\r\nfunction handleUpdateOrigin(\r\n  originRef: MutableRefObject<HTMLElement | null> | undefined,\r\n  updateOriginRect: Dispatch<SetStateAction<typeof initialRect>>,\r\n) {\r\n  const element = originRef && originRef.current;\r\n\r\n  if (element && element.nodeType === 1) {\r\n    // 获取触发时节点位置\r\n    const { top, left, width, height } = element.getBoundingClientRect();\r\n    const isImage = element.tagName === 'IMG';\r\n    updateOriginRect({\r\n      T: top,\r\n      L: left,\r\n      W: width,\r\n      H: height,\r\n      FIT: isImage ? (getComputedStyle(element).objectFit as 'contain' | 'cover' | 'fill' | undefined) : undefined,\r\n    });\r\n  }\r\n}\r\n","import { useEffect, useRef } from 'react';\r\n\r\nconst useMountedRef = () => {\r\n  const mountedRef = useRef(false);\r\n  useEffect(() => {\r\n    mountedRef.current = true;\r\n    return () => {\r\n      mountedRef.current = false;\r\n    };\r\n  }, []);\r\n  return mountedRef;\r\n};\r\n\r\nexport default useMountedRef;\r\n","import React from 'react';\r\nimport './Spinner.less';\r\n\r\n// eslint-disable-next-line react/prop-types\r\nfunction Spinner({ className = '', ...props }: React.HTMLAttributes<HTMLElement>) {\r\n  return (\r\n    <div className={`PhotoView__Spinner ${className}`} {...props}>\r\n      <svg viewBox=\"0 0 32 32\" width=\"36\" height=\"36\" fill=\"white\">\r\n        <path opacity=\".25\" d=\"M16 0 A16 16 0 0 0 16 32 A16 16 0 0 0 16 0 M16 4 A12 12 0 0 1 16 28 A12 12 0 0 1 16 4\" />\r\n        <path d=\"M16 0 A16 16 0 0 1 32 16 L28 16 A12 12 0 0 0 16 4z\" />\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport Spinner from './components/Spinner';\r\nimport useMountedRef from './hooks/useMountedRef';\r\nimport type { BrokenElementParams } from './types';\r\nimport './Photo.less';\r\n\r\nexport interface IPhotoLoadedParams {\r\n  loaded?: boolean;\r\n  naturalWidth?: number;\r\n  naturalHeight?: number;\r\n  broken?: boolean;\r\n}\r\n\r\nexport interface IPhotoProps extends React.HTMLAttributes<HTMLElement> {\r\n  src: string;\r\n  loaded: boolean;\r\n  broken: boolean;\r\n  onPhotoLoad: (params: IPhotoLoadedParams) => void;\r\n  loadingElement?: JSX.Element;\r\n  brokenElement?: JSX.Element | ((photoProps: BrokenElementParams) => JSX.Element);\r\n}\r\n\r\nexport default function Photo({\r\n  src,\r\n  loaded,\r\n  broken,\r\n  className,\r\n  onPhotoLoad,\r\n  loadingElement,\r\n  brokenElement,\r\n  ...restProps\r\n}: IPhotoProps) {\r\n  const mountedRef = useMountedRef();\r\n\r\n  function handleImageLoaded(e: React.SyntheticEvent<HTMLImageElement>) {\r\n    const { naturalWidth, naturalHeight } = e.target as HTMLImageElement;\r\n    if (mountedRef.current) {\r\n      onPhotoLoad({\r\n        loaded: true,\r\n        naturalWidth,\r\n        naturalHeight,\r\n      });\r\n    }\r\n  }\r\n\r\n  function handleImageBroken() {\r\n    if (mountedRef.current) {\r\n      onPhotoLoad({\r\n        broken: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  if (src && !broken) {\r\n    return (\r\n      <>\r\n        <img\r\n          className={`PhotoView__Photo${className ? ` ${className}` : ''}`}\r\n          src={src}\r\n          onLoad={handleImageLoaded}\r\n          onError={handleImageBroken}\r\n          draggable={false}\r\n          alt=\"\"\r\n          {...restProps}\r\n        />\r\n        {!loaded &&\r\n          (loadingElement ? (\r\n            <span className=\"PhotoView__icon\">{loadingElement}</span>\r\n          ) : (\r\n            <Spinner className=\"PhotoView__icon\" />\r\n          ))}\r\n      </>\r\n    );\r\n  }\r\n\r\n  if (brokenElement) {\r\n    return (\r\n      <span className=\"PhotoView__icon\">\r\n        {typeof brokenElement === 'function' ? brokenElement({ src }) : brokenElement}\r\n      </span>\r\n    );\r\n  }\r\n\r\n  return null;\r\n}\r\n","import React, { useRef } from 'react';\r\nimport isTouchDevice from './utils/isTouchDevice';\r\nimport getMultipleTouchPosition from './utils/getMultipleTouchPosition';\r\nimport getPositionOnMoveOrScale from './utils/getPositionOnMoveOrScale';\r\nimport { getReachType, computePositionEdge } from './utils/edgeHandle';\r\nimport getRotateSize from './utils/getRotateSize';\r\nimport { limitScale } from './utils/limitTarget';\r\nimport getSuitableImageSize from './utils/getSuitableImageSize';\r\nimport useIsomorphicLayoutEffect from './hooks/useIsomorphicLayoutEffect';\r\nimport { minStartTouchOffset, scaleBuffer } from './variables';\r\nimport type {\r\n  DataType,\r\n  ReachMoveFunction,\r\n  ReachFunction,\r\n  PhotoTapFunction,\r\n  BrokenElementParams,\r\n  ExposedProperties,\r\n  ReachType,\r\n  TouchStartType,\r\n} from './types';\r\nimport useSetState from './hooks/useSetState';\r\nimport useMethods from './hooks/useMethods';\r\nimport useDebounceCallback from './hooks/useDebounceCallback';\r\nimport useEventListener from './hooks/useEventListener';\r\nimport useContinuousTap from './hooks/useContinuousTap';\r\nimport useScrollPosition from './hooks/useScrollPosition';\r\nimport useAnimationPosition from './hooks/useAnimationPosition';\r\nimport useMountedRef from './hooks/useMountedRef';\r\nimport type { IPhotoLoadedParams } from './Photo';\r\nimport Photo from './Photo';\r\nimport './PhotoBox.less';\r\n\r\nexport interface PhotoBoxProps {\r\n  // 图片信息\r\n  item: DataType;\r\n  // 是否可见\r\n  visible: boolean;\r\n  // 动画时间\r\n  speed: number;\r\n  // 动画函数\r\n  easing: string;\r\n  // 容器类名\r\n  wrapClassName?: string;\r\n  // 图片类名\r\n  className?: string;\r\n  // style\r\n  style?: object;\r\n  // 自定义 loading\r\n  loadingElement?: JSX.Element;\r\n  // 加载失败 Element\r\n  brokenElement?: JSX.Element | ((photoProps: BrokenElementParams) => JSX.Element);\r\n\r\n  // Photo 点击事件\r\n  onPhotoTap: PhotoTapFunction;\r\n  // Mask 点击事件\r\n  onMaskTap: PhotoTapFunction;\r\n  // 到达边缘滑动事件\r\n  onReachMove: ReachMoveFunction;\r\n  // 触摸解除事件\r\n  onReachUp: ReachFunction;\r\n  // Resize 事件\r\n  onPhotoResize: () => void;\r\n  // 向父组件导出属性\r\n  expose: (state: ExposedProperties) => void;\r\n  // 是否在当前操作中\r\n  isActive: boolean;\r\n}\r\n\r\nconst initialState = {\r\n  // 真实宽度\r\n  naturalWidth: undefined as number | undefined,\r\n  // 真实高度\r\n  naturalHeight: undefined as number | undefined,\r\n  // 宽度\r\n  width: undefined as number | undefined,\r\n  // 高度\r\n  height: undefined as number | undefined,\r\n  // 加载成功状态\r\n  loaded: undefined as boolean | undefined,\r\n  // 破碎状态\r\n  broken: false,\r\n\r\n  // 图片 X 偏移量\r\n  x: 0,\r\n  // 图片 y 偏移量\r\n  y: 0,\r\n  // 图片处于触摸的状态\r\n  touched: false,\r\n  // 背景处于触摸状态\r\n  maskTouched: false,\r\n  // 旋转状态\r\n  rotate: 0,\r\n  // 放大缩小\r\n  scale: 1,\r\n\r\n  // 触摸开始时 x 原始坐标\r\n  CX: 0,\r\n  // 触摸开始时 y 原始坐标\r\n  CY: 0,\r\n\r\n  // 触摸开始时图片 x 偏移量\r\n  lastX: 0,\r\n  // 触摸开始时图片 y 偏移量\r\n  lastY: 0,\r\n  // 上一个触摸状态 x 原始坐标\r\n  lastCX: 0,\r\n  // 上一个触摸状态 y 原始坐标\r\n  lastCY: 0,\r\n  // 上一个触摸状态的 scale\r\n  lastScale: 1,\r\n\r\n  // 触摸开始时时间\r\n  touchTime: 0,\r\n  // 多指触控间距\r\n  touchLength: 0,\r\n  // 是否暂停 transition\r\n  pause: true,\r\n  // 停止 Raf\r\n  stopRaf: true,\r\n  // 当前边缘触发状态\r\n  reach: undefined as ReachType,\r\n};\r\n\r\nexport default function PhotoBox({\r\n  item: { src, render, width: customWidth = 0, height: customHeight = 0, originRef },\r\n  visible,\r\n  speed,\r\n  easing,\r\n  wrapClassName,\r\n  className,\r\n  style,\r\n  loadingElement,\r\n  brokenElement,\r\n\r\n  onPhotoTap,\r\n  onMaskTap,\r\n  onReachMove,\r\n  onReachUp,\r\n  onPhotoResize,\r\n  isActive,\r\n  expose,\r\n}: PhotoBoxProps) {\r\n  const [state, updateState] = useSetState(initialState);\r\n  const initialTouchRef = useRef<TouchStartType>(0);\r\n  const mounted = useMountedRef();\r\n\r\n  const {\r\n    naturalWidth = customWidth,\r\n    naturalHeight = customHeight,\r\n    width = customWidth,\r\n    height = customHeight,\r\n    loaded = !src,\r\n    broken,\r\n    x,\r\n    y,\r\n    touched,\r\n    stopRaf,\r\n    maskTouched,\r\n    rotate,\r\n    scale,\r\n    CX,\r\n    CY,\r\n    lastX,\r\n    lastY,\r\n    lastCX,\r\n    lastCY,\r\n    lastScale,\r\n    touchTime,\r\n    touchLength,\r\n    pause,\r\n    reach,\r\n  } = state;\r\n\r\n  const fn = useMethods({\r\n    onScale: (current: number) => onScale(limitScale(current)),\r\n    onRotate(current: number) {\r\n      if (rotate !== current) {\r\n        expose({ rotate: current });\r\n        updateState({ rotate: current, ...getSuitableImageSize(naturalWidth, naturalHeight, current) });\r\n      }\r\n    },\r\n  });\r\n\r\n  // 默认为屏幕中心缩放\r\n  function onScale(current: number, clientX?: number, clientY?: number) {\r\n    if (scale !== current) {\r\n      expose({ scale: current });\r\n      updateState({\r\n        scale: current,\r\n        ...getPositionOnMoveOrScale(x, y, width, height, scale, current, clientX, clientY),\r\n        ...(current <= 1 && { x: 0, y: 0 }),\r\n      });\r\n    }\r\n  }\r\n\r\n  const handleMove = useDebounceCallback(\r\n    (nextClientX: number, nextClientY: number, currentTouchLength: number = 0) => {\r\n      if ((touched || maskTouched) && isActive) {\r\n        // 通过旋转调换宽高\r\n        const [currentWidth, currentHeight] = getRotateSize(rotate, width, height);\r\n        // 单指最小缩放下，以初始移动距离来判断意图\r\n        if (currentTouchLength === 0 && initialTouchRef.current === 0) {\r\n          const isStillX = Math.abs(nextClientX - CX) <= minStartTouchOffset;\r\n          const isStillY = Math.abs(nextClientY - CY) <= minStartTouchOffset;\r\n          // 初始移动距离不足\r\n          if (isStillX && isStillY) {\r\n            // 方向记录上次移动距离，以便平滑过渡\r\n            updateState({ lastCX: nextClientX, lastCY: nextClientY });\r\n            return;\r\n          }\r\n          // 设置响应状态\r\n          initialTouchRef.current = !isStillX ? 1 : nextClientY > CY ? 3 : 2;\r\n        }\r\n\r\n        const offsetX = nextClientX - lastCX;\r\n        const offsetY = nextClientY - lastCY;\r\n        // 边缘触发状态\r\n        let currentReach: ReachType;\r\n        if (currentTouchLength === 0) {\r\n          // 边缘超出状态\r\n          const [horizontalCloseEdge] = computePositionEdge(offsetX + lastX, scale, currentWidth, innerWidth);\r\n          const [verticalCloseEdge] = computePositionEdge(offsetY + lastY, scale, currentHeight, innerHeight);\r\n          // 边缘触发检测\r\n          currentReach = getReachType(initialTouchRef.current, horizontalCloseEdge, verticalCloseEdge, reach);\r\n\r\n          // 接触边缘\r\n          if (currentReach !== undefined) {\r\n            onReachMove(currentReach, nextClientX, nextClientY, scale);\r\n          }\r\n        }\r\n        // 横向边缘触发、背景触发禁用当前滑动\r\n        if (currentReach === 'x' || maskTouched) {\r\n          updateState({ reach: 'x' });\r\n          return;\r\n        }\r\n        // 目标倍数\r\n        const toScale = limitScale(\r\n          scale + ((currentTouchLength - touchLength) / 100 / 2) * scale,\r\n          naturalWidth / width,\r\n          scaleBuffer,\r\n        );\r\n        // 导出变量\r\n        expose({ scale: toScale });\r\n        updateState({\r\n          touchLength: currentTouchLength,\r\n          reach: currentReach,\r\n          scale: toScale,\r\n          ...getPositionOnMoveOrScale(x, y, width, height, scale, toScale, nextClientX, nextClientY, offsetX, offsetY),\r\n        });\r\n      }\r\n    },\r\n    {\r\n      maxWait: 8,\r\n    },\r\n  );\r\n\r\n  function updateRaf(position: { x?: number; y?: number }) {\r\n    if (stopRaf || touched) {\r\n      return false;\r\n    }\r\n    if (mounted.current) {\r\n      // 下拉关闭时可以有动画\r\n      updateState({ ...position, pause: visible });\r\n    }\r\n    return mounted.current;\r\n  }\r\n\r\n  const slideToPosition = useScrollPosition(\r\n    (nextX) => updateRaf({ x: nextX }),\r\n    (nextY) => updateRaf({ y: nextY }),\r\n    (nextScale) => {\r\n      if (mounted.current) {\r\n        expose({ scale: nextScale });\r\n        updateState({ scale: nextScale });\r\n      }\r\n      return !touched && mounted.current;\r\n    },\r\n  );\r\n\r\n  const handlePhotoTap = useContinuousTap(onPhotoTap, (currentClientX: number, currentClientY: number) => {\r\n    if (!reach) {\r\n      // 若图片足够大，则放大适应的倍数\r\n      const endScale = scale !== 1 ? 1 : Math.max(2, naturalWidth / width);\r\n      onScale(endScale, currentClientX, currentClientY);\r\n    }\r\n  });\r\n\r\n  function handleUp(nextClientX: number, nextClientY: number) {\r\n    // 重置响应状态\r\n    initialTouchRef.current = 0;\r\n    if ((touched || maskTouched) && isActive) {\r\n      updateState({\r\n        touched: false,\r\n        maskTouched: false,\r\n        pause: false,\r\n        stopRaf: false,\r\n        reach: undefined,\r\n      });\r\n      const safeScale = limitScale(scale, naturalWidth / width);\r\n      // Go\r\n      slideToPosition(x, y, lastX, lastY, width, height, scale, safeScale, lastScale, rotate, touchTime);\r\n\r\n      onReachUp(nextClientX, nextClientY);\r\n      // 触发 Tap 事件\r\n      if (CX === nextClientX && CY === nextClientY) {\r\n        if (touched) {\r\n          handlePhotoTap(nextClientX, nextClientY);\r\n          return;\r\n        }\r\n        if (maskTouched) {\r\n          onMaskTap(nextClientX, nextClientY);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  useEventListener(isTouchDevice ? undefined : 'mousemove', (e) => {\r\n    e.preventDefault();\r\n    handleMove(e.clientX, e.clientY);\r\n  });\r\n  useEventListener(isTouchDevice ? undefined : 'mouseup', (e) => {\r\n    handleUp(e.clientX, e.clientY);\r\n  });\r\n  useEventListener(\r\n    isTouchDevice ? 'touchmove' : undefined,\r\n    (e) => {\r\n      e.preventDefault();\r\n      const position = getMultipleTouchPosition(e);\r\n      handleMove(...position);\r\n    },\r\n    { passive: false },\r\n  );\r\n  useEventListener(\r\n    isTouchDevice ? 'touchend' : undefined,\r\n    ({ changedTouches }) => {\r\n      const touch = changedTouches[0];\r\n      handleUp(touch.clientX, touch.clientY);\r\n    },\r\n    { passive: false },\r\n  );\r\n  useEventListener(\r\n    'resize',\r\n    useDebounceCallback(\r\n      () => {\r\n        if (loaded && !touched) {\r\n          updateState(getSuitableImageSize(naturalWidth, naturalHeight, rotate));\r\n          onPhotoResize();\r\n        }\r\n      },\r\n      { maxWait: 8 },\r\n    ),\r\n  );\r\n\r\n  useIsomorphicLayoutEffect(() => {\r\n    if (isActive) {\r\n      expose({ scale, rotate, ...fn });\r\n    }\r\n  }, [isActive]);\r\n\r\n  function handlePhotoLoad(params: IPhotoLoadedParams) {\r\n    updateState({\r\n      ...params,\r\n      ...(params.loaded && getSuitableImageSize(params.naturalWidth || 0, params.naturalHeight || 0, rotate)),\r\n    });\r\n  }\r\n\r\n  function handleStart(currentClientX: number, currentClientY: number, currentTouchLength: number = 0) {\r\n    updateState({\r\n      touched: true,\r\n      CX: currentClientX,\r\n      CY: currentClientY,\r\n      lastCX: currentClientX,\r\n      lastCY: currentClientY,\r\n      lastX: x,\r\n      lastY: y,\r\n      lastScale: scale,\r\n      touchLength: currentTouchLength,\r\n      touchTime: Date.now(),\r\n    });\r\n  }\r\n\r\n  function handleWheel(e: React.WheelEvent) {\r\n    if (!reach) {\r\n      // 限制最大倍数和最小倍数\r\n      const toScale = limitScale(scale - e.deltaY / 100 / 2, naturalWidth / width);\r\n      updateState({ stopRaf: true });\r\n      onScale(toScale, e.clientX, e.clientY);\r\n    }\r\n  }\r\n\r\n  function handleMaskStart(e: { clientX: number; clientY: number }) {\r\n    updateState({\r\n      maskTouched: true,\r\n      CX: e.clientX,\r\n      CY: e.clientY,\r\n      lastX: x,\r\n      lastY: y,\r\n    });\r\n  }\r\n\r\n  function handleTouchStart(e: React.TouchEvent) {\r\n    e.stopPropagation();\r\n    handleStart(...getMultipleTouchPosition(e));\r\n  }\r\n\r\n  function handleMouseDown(e: React.MouseEvent) {\r\n    e.stopPropagation();\r\n    if (e.button === 0) {\r\n      handleStart(e.clientX, e.clientY, 0);\r\n    }\r\n  }\r\n\r\n  // 计算位置\r\n  const [translateX, translateY, currentWidth, currentHeight, currentScale, opacity, easingMode, FIT] =\r\n    useAnimationPosition(visible, originRef, loaded, x, y, width, height, scale, speed, (isPause: boolean) =>\r\n      updateState({ pause: isPause }),\r\n    );\r\n  // 图片 objectFit 渐变时间\r\n  const transitionLayoutTime = easingMode < 4 ? speed / 2 : easingMode > 4 ? speed : 0;\r\n  const transitionCSS = `transform ${speed}ms ${easing}`;\r\n\r\n  const attrs = {\r\n    className,\r\n    onMouseDown: isTouchDevice ? undefined : handleMouseDown,\r\n    onTouchStart: isTouchDevice ? handleTouchStart : undefined,\r\n    onWheel: handleWheel,\r\n    style: {\r\n      width: `${currentWidth}px`,\r\n      height: `${currentHeight}px`,\r\n      opacity,\r\n      objectFit: easingMode === 4 ? undefined : FIT,\r\n      transform: rotate ? `rotate(${rotate}deg)` : undefined,\r\n      transition:\r\n        // 初始状态无渐变\r\n        easingMode > 2\r\n          ? `${transitionCSS}, opacity ${speed}ms ease, height ${transitionLayoutTime}ms ${easing}`\r\n          : undefined,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`PhotoView__PhotoWrap${wrapClassName ? ` ${wrapClassName}` : ''}`}\r\n      style={style}\r\n      onMouseDown={!isTouchDevice && isActive ? handleMaskStart : undefined}\r\n      onTouchStart={isTouchDevice && isActive ? (e) => handleMaskStart(e.touches[0]) : undefined}\r\n    >\r\n      <div\r\n        className=\"PhotoView__PhotoBox\"\r\n        style={{\r\n          transform: `matrix(${currentScale}, 0, 0, ${currentScale}, ${translateX}, ${translateY})`,\r\n          transition: touched || pause ? undefined : transitionCSS,\r\n          willChange: isActive ? 'transform' : undefined,\r\n        }}\r\n      >\r\n        {src ? (\r\n          <Photo\r\n            src={src}\r\n            loaded={loaded}\r\n            broken={broken}\r\n            {...attrs}\r\n            onPhotoLoad={handlePhotoLoad}\r\n            loadingElement={loadingElement}\r\n            brokenElement={brokenElement}\r\n          />\r\n        ) : (\r\n          render && render({ attrs, scale: currentScale, rotate })\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useRef } from 'react';\r\nimport useDebounceCallback from './useDebounceCallback';\r\n\r\nexport type TapFuncType<T> = (...args: T[]) => void;\r\n\r\n/**\r\n * 单击和双击事件处理\r\n * @param singleTap - 单击事件\r\n * @param doubleTap - 双击事件\r\n * @return invokeTap\r\n */\r\nexport default function useContinuousTap<T>(singleTap: TapFuncType<T>, doubleTap: TapFuncType<T>): TapFuncType<T> {\r\n  // 当前连续点击次数\r\n  const continuousClick = useRef(0);\r\n\r\n  const debounceTap = useDebounceCallback(\r\n    (...args) => {\r\n      continuousClick.current = 0;\r\n      singleTap(...args);\r\n    },\r\n    {\r\n      wait: 300,\r\n    },\r\n  );\r\n\r\n  return function invokeTap(...args) {\r\n    continuousClick.current += 1;\r\n    debounceTap(...args);\r\n    // 双击\r\n    if (continuousClick.current >= 2) {\r\n      debounceTap.cancel();\r\n      continuousClick.current = 0;\r\n      doubleTap(...args);\r\n    }\r\n  };\r\n}\r\n","import type { MutableRefObject } from 'react';\r\nimport useAnimationOrigin from './useAnimationOrigin';\r\nimport useTargetScale from './useTargetScale';\r\n\r\nexport default function useAnimationPosition(\r\n  visible: boolean | undefined,\r\n  originRef: MutableRefObject<HTMLElement | null> | undefined,\r\n  loaded: boolean,\r\n  x: number,\r\n  y: number,\r\n  width: number,\r\n  height: number,\r\n  scale: number,\r\n  speed: number,\r\n  updateEasing: (pause: boolean) => void,\r\n) {\r\n  // 延迟更新 width/height\r\n  const [autoWidth, autoHeight, autoScale] = useTargetScale(width, height, scale, speed, updateEasing);\r\n  // 动画源处理\r\n  const [easingMode, originRect] = useAnimationOrigin(visible, originRef, loaded, speed, updateEasing);\r\n\r\n  // 计算动画位置\r\n  const { T, L, W, H, FIT } = originRect;\r\n  // 偏移量，x: 0, y: 0 居中为初始\r\n  const centerWidth = innerWidth / 2;\r\n  const centerHeight = innerHeight / 2;\r\n  const offsetX = centerWidth - (width * scale) / 2;\r\n  const offsetY = centerHeight - (height * scale) / 2;\r\n  // 缩略图状态\r\n  const miniMode = easingMode < 3 || easingMode > 4;\r\n  // 有缩略图时，则为缩略图的位置，否则居中\r\n  const translateX = miniMode ? (W ? L : centerWidth) : x + offsetX;\r\n  const translateY = miniMode ? (W ? T : centerHeight) : y + offsetY;\r\n\r\n  // 最小值缩放\r\n  const minScale = W / (width * scale) || 0.01;\r\n\r\n  // 适应 objectFit 保持缩略图宽高比\r\n  const currentHeight = miniMode && FIT ? autoWidth * (H / W) : autoHeight;\r\n  // 初始加载情况无缩放\r\n  const currentScale = easingMode === 0 ? autoScale : miniMode ? minScale : autoScale;\r\n  const opacity = miniMode ? (FIT ? 1 : 0) : 1;\r\n\r\n  return [translateX, translateY, autoWidth, currentHeight, currentScale, opacity, easingMode, FIT] as const;\r\n}\r\n","import { useRef } from 'react';\r\nimport useSetState from './useSetState';\r\nimport useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect';\r\nimport useDebounceCallback from './useDebounceCallback';\r\n\r\n/**\r\n * 目标缩放延迟处理\r\n */\r\nexport default function useTargetScale(\r\n  realWidth: number,\r\n  realHeight: number,\r\n  realScale: number,\r\n  speed: number,\r\n  updateEasing: (pause: boolean) => void,\r\n) {\r\n  const execRef = useRef(false);\r\n\r\n  const [{ lead, scale }, updateState] = useSetState({ lead: true, scale: realScale });\r\n\r\n  const moveScale = useDebounceCallback(\r\n    async (current: number) => {\r\n      updateEasing(true);\r\n      updateState({ lead: false, scale: current });\r\n    },\r\n    { wait: speed },\r\n  );\r\n\r\n  useIsomorphicLayoutEffect(() => {\r\n    if (!execRef.current) {\r\n      execRef.current = true;\r\n      return;\r\n    }\r\n    updateEasing(false);\r\n    updateState({ lead: true });\r\n\r\n    moveScale(realScale);\r\n  }, [realScale]);\r\n\r\n  // 运动开始\r\n  if (lead) {\r\n    return [realWidth * scale, realHeight * scale, realScale / scale] as const;\r\n  }\r\n\r\n  // 运动结束\r\n  return [realWidth * realScale, realHeight * realScale, 1] as const;\r\n}\r\n","import React, { useRef, useState } from 'react';\r\nimport type { DataType, PhotoProviderBase, OverlayRenderProps, ReachType } from './types';\r\nimport { defaultEasing, defaultSpeed, defaultOpacity, horizontalOffset, maxMoveOffset } from './variables';\r\nimport isTouchDevice from './utils/isTouchDevice';\r\nimport { limitNumber } from './utils/limitTarget';\r\nimport useIsomorphicLayoutEffect from './hooks/useIsomorphicLayoutEffect';\r\nimport useAdjacentImages from './hooks/useAdjacentImages';\r\nimport useSetState from './hooks/useSetState';\r\nimport useEventListener from './hooks/useEventListener';\r\nimport useAnimationVisible from './hooks/useAnimationVisible';\r\nimport useMethods from './hooks/useMethods';\r\nimport SlidePortal from './components/SlidePortal';\r\nimport CloseIcon from './components/CloseIcon';\r\nimport ArrowLeft from './components/ArrowLeft';\r\nimport ArrowRight from './components/ArrowRight';\r\nimport PreventScroll from './components/PreventScroll';\r\nimport PhotoBox from './PhotoBox';\r\nimport './PhotoSlider.less';\r\n\r\nexport interface IPhotoSliderProps extends PhotoProviderBase {\r\n  // 图片列表\r\n  images: DataType[];\r\n  // 图片当前索引\r\n  index?: number;\r\n  // 索引改变回调\r\n  onIndexChange?: (index: number) => void;\r\n  // 可见\r\n  visible: boolean;\r\n  // 关闭回调\r\n  onClose: (evt?: React.MouseEvent | React.TouchEvent) => void;\r\n  // 关闭动画结束后回调\r\n  afterClose?: () => void;\r\n\r\n  direction?: 'ltr' | 'rtl';\r\n}\r\n\r\ntype PhotoSliderState = {\r\n  // 偏移量\r\n  x: number;\r\n  // 图片处于触摸的状态\r\n  touched: boolean;\r\n  // 是否暂停 transition\r\n  pause: boolean;\r\n  // Reach 开始时 x 坐标\r\n  lastCX: number | undefined;\r\n  // Reach 开始时 y 坐标\r\n  lastCY: number | undefined;\r\n  // 背景透明度\r\n  bg: number | null | undefined;\r\n  // 上次关闭的背景透明度\r\n  lastBg: number | null | undefined;\r\n  // 是否显示 overlay\r\n  overlay: boolean;\r\n  // 是否为最小状态，可下拉关闭\r\n  minimal: boolean;\r\n  // 缩放\r\n  scale: number;\r\n  // 旋转\r\n  rotate: number;\r\n  // 缩放回调\r\n  onScale?: (scale: number) => void;\r\n  // 旋转回调\r\n  onRotate?: (rotate: number) => void;\r\n};\r\n\r\nconst initialState: PhotoSliderState = {\r\n  x: 0,\r\n  touched: false,\r\n  pause: false,\r\n  lastCX: undefined,\r\n  lastCY: undefined,\r\n  bg: undefined,\r\n  lastBg: undefined,\r\n  overlay: true,\r\n  minimal: true,\r\n  scale: 1,\r\n  rotate: 0,\r\n};\r\n\r\nexport default function PhotoSlider(props: IPhotoSliderProps) {\r\n  const {\r\n    loop = 3,\r\n    speed: speedFn,\r\n    easing: easingFn,\r\n    photoClosable,\r\n    maskClosable = true,\r\n    maskOpacity = defaultOpacity,\r\n    pullClosable = true,\r\n    bannerVisible = true,\r\n    overlayRender,\r\n    toolbarRender,\r\n    className,\r\n    maskClassName,\r\n    photoClassName,\r\n    photoWrapClassName,\r\n    loadingElement,\r\n    brokenElement,\r\n    images,\r\n    index: controlledIndex = 0,\r\n    onIndexChange: controlledIndexChange,\r\n    visible,\r\n    onClose,\r\n    afterClose,\r\n    portalContainer,\r\n  } = props;\r\n\r\n  const [state, updateState] = useSetState(initialState);\r\n  const [innerIndex, updateInnerIndex] = useState(0);\r\n\r\n  const {\r\n    x,\r\n    touched,\r\n    pause,\r\n\r\n    lastCX,\r\n    lastCY,\r\n\r\n    bg = maskOpacity,\r\n    lastBg,\r\n    overlay,\r\n    minimal,\r\n\r\n    scale,\r\n    rotate,\r\n    onScale,\r\n    onRotate,\r\n  } = state;\r\n\r\n  // 受控 index\r\n  const isControlled = props.hasOwnProperty('index');\r\n  const index = isControlled ? controlledIndex : innerIndex;\r\n  const onIndexChange = isControlled ? controlledIndexChange : updateInnerIndex;\r\n  // 内部虚拟 index\r\n  const virtualIndexRef = useRef(index);\r\n\r\n  // 当前图片\r\n  const imageLength = images.length;\r\n  const currentImage: DataType | undefined = images[index];\r\n\r\n  // 是否开启\r\n  // noinspection SuspiciousTypeOfGuard\r\n  const enableLoop = typeof loop === 'boolean' ? loop : imageLength > loop;\r\n\r\n  // 显示动画处理\r\n  const [realVisible, activeAnimation, onAnimationEnd] = useAnimationVisible(visible, afterClose);\r\n\r\n  useIsomorphicLayoutEffect(() => {\r\n    // 显示弹出层，修正正确的指向\r\n    if (realVisible) {\r\n      updateState({\r\n        pause: true,\r\n        x: index * -(innerWidth + horizontalOffset),\r\n      });\r\n      virtualIndexRef.current = index;\r\n      return;\r\n    }\r\n    // 关闭后清空状态\r\n    updateState(initialState);\r\n  }, [realVisible]);\r\n\r\n  const { close, changeIndex } = useMethods({\r\n    close(evt?: React.MouseEvent | React.TouchEvent) {\r\n      if (onRotate) {\r\n        onRotate(0);\r\n      }\r\n      updateState({\r\n        overlay: true,\r\n        // 记录当前关闭时的透明度\r\n        lastBg: bg,\r\n      });\r\n      onClose(evt);\r\n    },\r\n    changeIndex(nextIndex: number, isPause: boolean = false) {\r\n      // 当前索引\r\n      const currentIndex = enableLoop ? virtualIndexRef.current + (nextIndex - index) : nextIndex;\r\n      const max = imageLength - 1;\r\n      // 虚拟 index\r\n      // 非循环模式，限制区间\r\n      const limitIndex = limitNumber(currentIndex, 0, max);\r\n      const nextVirtualIndex = enableLoop ? currentIndex : limitIndex;\r\n      // 单个屏幕宽度\r\n      const singlePageWidth = innerWidth + horizontalOffset;\r\n\r\n      updateState({\r\n        touched: false,\r\n        lastCX: undefined,\r\n        lastCY: undefined,\r\n        x: -singlePageWidth * nextVirtualIndex,\r\n        pause: isPause,\r\n      });\r\n\r\n      virtualIndexRef.current = nextVirtualIndex;\r\n      // 更新真实的 index\r\n      const realLoopIndex = nextIndex < 0 ? max : nextIndex > max ? 0 : nextIndex;\r\n      if (onIndexChange) {\r\n        onIndexChange(enableLoop ? realLoopIndex : limitIndex);\r\n      }\r\n    },\r\n  });\r\n\r\n  useEventListener('keydown', (evt: KeyboardEvent) => {\r\n    if (visible) {\r\n      switch (evt.key) {\r\n        case 'ArrowLeft':\r\n          changeIndex(index - 1, true);\r\n          break;\r\n        case 'ArrowRight':\r\n          changeIndex(index + 1, true);\r\n          break;\r\n        case 'Escape':\r\n          close();\r\n          break;\r\n        default:\r\n      }\r\n    }\r\n  });\r\n\r\n  function handlePhotoTap(closeable: boolean | undefined) {\r\n    return closeable ? close() : updateState({ overlay: !overlay });\r\n  }\r\n\r\n  function handleResize() {\r\n    updateState({\r\n      x: -(innerWidth + horizontalOffset) * index,\r\n      lastCX: undefined,\r\n      lastCY: undefined,\r\n      pause: true,\r\n    });\r\n    virtualIndexRef.current = index;\r\n  }\r\n\r\n  function handleReachVerticalMove(clientY: number, nextScale?: number) {\r\n    if (lastCY === undefined) {\r\n      updateState({\r\n        touched: true,\r\n        lastCY: clientY,\r\n        bg,\r\n        minimal: true,\r\n      });\r\n      return;\r\n    }\r\n    const opacity =\r\n      maskOpacity === null ? null : limitNumber(maskOpacity, 0.01, maskOpacity - Math.abs(clientY - lastCY) / 100 / 4);\r\n\r\n    updateState({\r\n      touched: true,\r\n      lastCY,\r\n      bg: nextScale === 1 ? opacity : maskOpacity,\r\n      minimal: nextScale === 1,\r\n    });\r\n  }\r\n\r\n  function handleReachHorizontalMove(clientX: number) {\r\n    if (lastCX === undefined) {\r\n      updateState({\r\n        touched: true,\r\n        lastCX: clientX,\r\n        x,\r\n        pause: false,\r\n      });\r\n      return;\r\n    }\r\n    const originOffsetClientX = clientX - lastCX;\r\n    let offsetClientX = originOffsetClientX;\r\n\r\n    // 第一张和最后一张超出距离减半\r\n    if (\r\n      !enableLoop &&\r\n      ((index === 0 && originOffsetClientX > 0) || (index === imageLength - 1 && originOffsetClientX < 0))\r\n    ) {\r\n      offsetClientX = originOffsetClientX / 2;\r\n    }\r\n\r\n    updateState({\r\n      touched: true,\r\n      lastCX,\r\n      x: -(innerWidth + horizontalOffset) * virtualIndexRef.current + offsetClientX,\r\n      pause: false,\r\n    });\r\n  }\r\n\r\n  function handleReachMove(reachPosition: ReachType, clientX: number, clientY: number, nextScale?: number) {\r\n    if (reachPosition === 'x') {\r\n      handleReachHorizontalMove(clientX);\r\n    } else if (reachPosition === 'y') {\r\n      handleReachVerticalMove(clientY, nextScale);\r\n    }\r\n  }\r\n\r\n  function handleReachUp(clientX: number, clientY: number) {\r\n    const offsetClientX = clientX - (lastCX ?? clientX);\r\n    const offsetClientY = clientY - (lastCY ?? clientY);\r\n    let willClose = false;\r\n    // 下一张\r\n    if (offsetClientX < -maxMoveOffset) {\r\n      changeIndex(index + 1);\r\n      return;\r\n    }\r\n    // 上一张\r\n    if (offsetClientX > maxMoveOffset) {\r\n      changeIndex(index - 1);\r\n      return;\r\n    }\r\n    const singlePageWidth = innerWidth + horizontalOffset;\r\n    // 当前偏移\r\n    const currentTranslateX = -singlePageWidth * virtualIndexRef.current;\r\n\r\n    if (Math.abs(offsetClientY) > 100 && minimal && pullClosable) {\r\n      willClose = true;\r\n      close();\r\n    }\r\n    updateState({\r\n      touched: false,\r\n      x: currentTranslateX,\r\n      lastCX: undefined,\r\n      lastCY: undefined,\r\n      bg: maskOpacity,\r\n      overlay: willClose ? true : overlay,\r\n    });\r\n  }\r\n  // 截取相邻的图片\r\n  const adjacentImages = useAdjacentImages(images, index, enableLoop);\r\n\r\n  if (!realVisible) {\r\n    return null;\r\n  }\r\n\r\n  const currentOverlayVisible = overlay && !activeAnimation;\r\n  // 关闭过程中使用下拉保存的透明度\r\n  const currentOpacity = visible ? bg : lastBg;\r\n  // 覆盖物参数\r\n  const overlayParams: OverlayRenderProps | undefined = onScale &&\r\n    onRotate && {\r\n      images,\r\n      index,\r\n      visible,\r\n      onClose: close,\r\n      onIndexChange: changeIndex,\r\n      overlayVisible: currentOverlayVisible,\r\n      overlay: currentImage && currentImage.overlay,\r\n      scale,\r\n      rotate,\r\n      onScale,\r\n      onRotate,\r\n    };\r\n  // 动画时间\r\n  const currentSpeed = speedFn ? speedFn(activeAnimation) : defaultSpeed;\r\n  const currentEasing = easingFn ? easingFn(activeAnimation) : defaultEasing;\r\n  const slideSpeed = speedFn ? speedFn(3) : defaultSpeed + 200;\r\n  const slideEasing = easingFn ? easingFn(3) : defaultEasing;\r\n\r\n  return (\r\n    <SlidePortal\r\n      className={`PhotoView-Portal${!currentOverlayVisible ? ' PhotoView-Slider__clean' : ''}${\r\n        !visible ? ' PhotoView-Slider__willClose' : ''\r\n      }${className ? ` ${className}` : ''}`}\r\n      role=\"dialog\"\r\n      onClick={(e) => e.stopPropagation()}\r\n      container={portalContainer}\r\n    >\r\n      {visible && <PreventScroll />}\r\n      <div\r\n        className={`PhotoView-Slider__Backdrop${maskClassName ? ` ${maskClassName}` : ''}${\r\n          activeAnimation === 1\r\n            ? ' PhotoView-Slider__fadeIn'\r\n            : activeAnimation === 2\r\n              ? ' PhotoView-Slider__fadeOut'\r\n              : ''\r\n        }`}\r\n        style={{\r\n          background: currentOpacity ? `rgba(0, 0, 0, ${currentOpacity})` : undefined,\r\n          transitionTimingFunction: currentEasing,\r\n          transitionDuration: `${touched ? 0 : currentSpeed}ms`,\r\n          animationDuration: `${currentSpeed}ms`,\r\n        }}\r\n        onAnimationEnd={onAnimationEnd}\r\n      />\r\n      {bannerVisible && (\r\n        <div className=\"PhotoView-Slider__BannerWrap\">\r\n          <div className=\"PhotoView-Slider__Counter\">\r\n            {index + 1} / {imageLength}\r\n          </div>\r\n          <div className=\"PhotoView-Slider__BannerRight\">\r\n            {toolbarRender && overlayParams && toolbarRender(overlayParams)}\r\n            <CloseIcon className=\"PhotoView-Slider__toolbarIcon\" onClick={close} />\r\n          </div>\r\n        </div>\r\n      )}\r\n      {adjacentImages.map((item: DataType, currentIndex) => {\r\n        // 截取之前的索引位置\r\n        const nextIndex =\r\n          !enableLoop && index === 0 ? index + currentIndex : virtualIndexRef.current - 1 + currentIndex;\r\n\r\n        return (\r\n          <PhotoBox\r\n            key={enableLoop ? `${item.key}/${item.src}/${nextIndex}` : item.key}\r\n            item={item}\r\n            speed={currentSpeed}\r\n            easing={currentEasing}\r\n            visible={visible}\r\n            onReachMove={handleReachMove}\r\n            onReachUp={handleReachUp}\r\n            onPhotoTap={() => handlePhotoTap(photoClosable)}\r\n            onMaskTap={() => handlePhotoTap(maskClosable)}\r\n            wrapClassName={photoWrapClassName}\r\n            className={photoClassName}\r\n            style={{\r\n              left: `${(innerWidth + horizontalOffset) * nextIndex}px`,\r\n              transform: `translate3d(${x}px, 0px, 0)`,\r\n              transition: touched || pause ? undefined : `transform ${slideSpeed}ms ${slideEasing}`,\r\n            }}\r\n            loadingElement={loadingElement}\r\n            brokenElement={brokenElement}\r\n            onPhotoResize={handleResize}\r\n            isActive={virtualIndexRef.current === nextIndex}\r\n            expose={updateState}\r\n          />\r\n        );\r\n      })}\r\n      {!isTouchDevice && bannerVisible && (\r\n        <>\r\n          {(enableLoop || index !== 0) && (\r\n            <div className=\"PhotoView-Slider__ArrowLeft\" onClick={() => changeIndex(index - 1, true)}>\r\n              <ArrowLeft />\r\n            </div>\r\n          )}\r\n          {(enableLoop || index + 1 < imageLength) && (\r\n            <div className=\"PhotoView-Slider__ArrowRight\" onClick={() => changeIndex(index + 1, true)}>\r\n              <ArrowRight />\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n      {overlayRender && overlayParams && (\r\n        <div className=\"PhotoView-Slider__Overlay\">{overlayRender(overlayParams)}</div>\r\n      )}\r\n    </SlidePortal>\r\n  );\r\n}\r\n","import { useReducer, useRef } from 'react';\r\nimport type { ActiveAnimationType } from '../types';\r\nimport useForkedVariable from './useForkedVariable';\r\n\r\n/**\r\n * 动画关闭处理真实关闭状态\r\n * 通过 onAnimationEnd 回调实现 leaveCallback\r\n */\r\nexport default function useAnimationVisible(\r\n  visible: boolean | undefined,\r\n  afterClose?: () => void,\r\n): [realVisible: boolean | undefined, activeAnimation: ActiveAnimationType, onAnimationEnd: () => void] {\r\n  const [, handleRender] = useReducer((c) => !c, false);\r\n\r\n  const activeAnimation = useRef<ActiveAnimationType>(0);\r\n\r\n  // 可见状态分支\r\n  const [realVisible, modifyRealVisible] = useForkedVariable(visible, (modify) => {\r\n    // 可见状态：设置进入动画\r\n    if (visible) {\r\n      modify(visible);\r\n      activeAnimation.current = 1;\r\n    } else {\r\n      activeAnimation.current = 2;\r\n    }\r\n  });\r\n\r\n  function onAnimationEnd() {\r\n    // 动画结束后触发渲染\r\n    handleRender();\r\n    // 结束动画：设置隐藏状态\r\n    if (activeAnimation.current === 2) {\r\n      modifyRealVisible(false);\r\n      // 触发隐藏回调\r\n      if (afterClose) {\r\n        afterClose();\r\n      }\r\n    }\r\n    // 重置状态\r\n    activeAnimation.current = 0;\r\n  }\r\n\r\n  return [\r\n    /**\r\n     * 真实可见状态\r\n     */\r\n    realVisible,\r\n    /**\r\n     * 正在进行的动画\r\n     */\r\n    activeAnimation.current,\r\n    /**\r\n     * 动画结束后回调\r\n     */\r\n    onAnimationEnd,\r\n  ];\r\n}\r\n","import { useRef, useMemo } from 'react';\r\n\r\n/**\r\n * 逻辑分叉变量处理\r\n * 此 hook 不触发额外渲染\r\n */\r\nexport default function useForkedVariable<T>(initial: T, updater: (modify: (variable: T) => void) => void) {\r\n  // 初始分叉变量\r\n  const forkedRef = useRef(initial);\r\n\r\n  function modify(next: T) {\r\n    forkedRef.current = next;\r\n  }\r\n\r\n  useMemo(() => {\r\n    // 参数变化之后同步内部分叉变量\r\n    updater(modify);\r\n  }, [initial]);\r\n\r\n  return [forkedRef.current, modify] as const;\r\n}\r\n","import { useMemo } from 'react';\r\nimport type { DataType } from '../types';\r\n\r\n/**\r\n * 截取相邻三张图片\r\n */\r\nexport default function useAdjacentImages(images: DataType[], index: number, loop: boolean) {\r\n  return useMemo(() => {\r\n    const imageLength = images.length;\r\n    if (loop) {\r\n      const connected = images.concat(images).concat(images);\r\n      return connected.slice(imageLength + index - 1, imageLength + index + 2);\r\n    }\r\n    return images.slice(Math.max(index - 1, 0), Math.min(index + 2, imageLength + 1));\r\n  }, [images, index, loop]);\r\n}\r\n","import React, { useMemo, useRef } from 'react';\r\nimport type { DataType, PhotoProviderBase } from './types';\r\nimport useMethods from './hooks/useMethods';\r\nimport useSetState from './hooks/useSetState';\r\nimport PhotoContext from './photo-context';\r\nimport PhotoSlider from './PhotoSlider';\r\n\r\nexport interface PhotoProviderProps extends PhotoProviderBase {\r\n  children: React.ReactNode;\r\n  onIndexChange?: (index: number, state: PhotoProviderState) => void;\r\n  onVisibleChange?: (visible: boolean, index: number, state: PhotoProviderState) => void;\r\n}\r\n\r\ntype PhotoProviderState = {\r\n  images: DataType[];\r\n  visible: boolean;\r\n  index: number;\r\n};\r\n\r\nconst initialState: PhotoProviderState = {\r\n  images: [],\r\n  visible: false,\r\n  index: 0,\r\n};\r\n\r\nexport default function PhotoProvider({ children, onIndexChange, onVisibleChange, ...restProps }: PhotoProviderProps) {\r\n  const [state, updateState] = useSetState(initialState);\r\n  const uniqueIdRef = useRef(0);\r\n  const { images, visible, index } = state;\r\n\r\n  const methods = useMethods({\r\n    nextId() {\r\n      return (uniqueIdRef.current += 1);\r\n    },\r\n    update(imageItem: DataType) {\r\n      const currentIndex = images.findIndex((n) => n.key === imageItem.key);\r\n      if (currentIndex > -1) {\r\n        const nextImages = images.slice();\r\n        nextImages.splice(currentIndex, 1, imageItem);\r\n        updateState({\r\n          images: nextImages,\r\n        });\r\n        return;\r\n      }\r\n      updateState((prev) => ({\r\n        images: prev.images.concat(imageItem),\r\n      }));\r\n    },\r\n    remove(key: number) {\r\n      updateState((prev) => {\r\n        const nextImages = prev.images.filter((item) => item.key !== key);\r\n        const nextEndIndex = nextImages.length - 1;\r\n        return {\r\n          images: nextImages,\r\n          index: Math.min(nextEndIndex, index),\r\n        };\r\n      });\r\n    },\r\n    show(key: number) {\r\n      const currentIndex = images.findIndex((item) => item.key === key);\r\n      updateState({\r\n        visible: true,\r\n        index: currentIndex,\r\n      });\r\n      if (onVisibleChange) {\r\n        onVisibleChange(true, currentIndex, state);\r\n      }\r\n    },\r\n  });\r\n\r\n  const fn = useMethods({\r\n    close() {\r\n      updateState({\r\n        visible: false,\r\n      });\r\n\r\n      if (onVisibleChange) {\r\n        onVisibleChange(false, index, state);\r\n      }\r\n    },\r\n    changeIndex(nextIndex: number) {\r\n      updateState({\r\n        index: nextIndex,\r\n      });\r\n\r\n      if (onIndexChange) {\r\n        onIndexChange(nextIndex, state);\r\n      }\r\n    },\r\n  });\r\n\r\n  const value = useMemo(() => ({ ...state, ...methods }), [state, methods]);\r\n\r\n  return (\r\n    <PhotoContext.Provider value={value}>\r\n      {children}\r\n      <PhotoSlider\r\n        images={images}\r\n        visible={visible}\r\n        index={index}\r\n        onIndexChange={fn.changeIndex}\r\n        onClose={fn.close}\r\n        {...restProps}\r\n      />\r\n    </PhotoContext.Provider>\r\n  );\r\n}\r\n","import type React from 'react';\r\nimport { useImperativeHandle, Children, cloneElement, useContext, useEffect, useMemo, useRef } from 'react';\r\nimport useInitial from './hooks/useInitial';\r\nimport useMethods from './hooks/useMethods';\r\nimport type { PhotoContextType } from './photo-context';\r\nimport PhotoContext from './photo-context';\r\nimport type { PhotoRenderParams } from './types';\r\n\r\nexport interface PhotoViewProps {\r\n  /**\r\n   * 图片地址\r\n   */\r\n  src?: string;\r\n  /**\r\n   * 自定义渲染，优先级比 src 低\r\n   */\r\n  render?: (props: PhotoRenderParams) => React.ReactNode;\r\n  /**\r\n   * 自定义覆盖节点\r\n   */\r\n  overlay?: React.ReactNode;\r\n  /**\r\n   * 自定义渲染节点宽度\r\n   */\r\n  width?: number;\r\n  /**\r\n   * 自定义渲染节点高度\r\n   */\r\n  height?: number;\r\n  /**\r\n   * 子节点，一般为缩略图\r\n   */\r\n  children?: React.ReactElement;\r\n  /**\r\n   * 触发的事件\r\n   */\r\n  triggers?: ('onClick' | 'onDoubleClick')[];\r\n}\r\n\r\nconst PhotoView: React.FC<PhotoViewProps> = ({\r\n  src,\r\n  render,\r\n  overlay,\r\n  width,\r\n  height,\r\n  triggers = ['onClick'],\r\n  children,\r\n}) => {\r\n  const photoContext = useContext<PhotoContextType>(PhotoContext);\r\n  const key = useInitial(() => photoContext.nextId());\r\n  const originRef = useRef<HTMLElement>(null);\r\n\r\n  useImperativeHandle((children as React.FunctionComponentElement<HTMLElement>)?.ref, () => originRef.current);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      photoContext.remove(key);\r\n    };\r\n  }, []);\r\n\r\n  function invokeChildrenFn(eventName: string, e: React.SyntheticEvent) {\r\n    if (children) {\r\n      const eventFn = children.props[eventName];\r\n      if (eventFn) {\r\n        eventFn(e);\r\n      }\r\n    }\r\n  }\r\n\r\n  const fn = useMethods({\r\n    render(props: PhotoRenderParams) {\r\n      return render && render(props);\r\n    },\r\n    show(eventName: string, e: React.MouseEvent) {\r\n      photoContext.show(key);\r\n      invokeChildrenFn(eventName, e);\r\n    },\r\n  });\r\n\r\n  const eventListeners = useMemo(() => {\r\n    const listener = {};\r\n    triggers.forEach((eventName) => {\r\n      listener[eventName] = fn.show.bind(null, eventName);\r\n    });\r\n    return listener;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    photoContext.update({\r\n      key,\r\n      src,\r\n      originRef,\r\n      render: fn.render,\r\n      overlay,\r\n      width,\r\n      height,\r\n    });\r\n  }, [src]);\r\n\r\n  if (children) {\r\n    return Children.only(cloneElement(children, { ...eventListeners, ref: originRef }));\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default PhotoView;\r\n","import { useRef } from 'react';\r\n\r\nexport default function useInitial<T extends (...args: any) => any>(callback: T) {\r\n  const { current } = useRef({ sign: false, fn: undefined as ReturnType<T> });\r\n  if (!current.sign) {\r\n    current.sign = true;\r\n    current.fn = callback();\r\n  }\r\n  return current.fn;\r\n}\r\n"],"names":["useMethods","fn","current","useRef","curr","undefined","Object","create","keys","forEach","key","args","call","useSetState","initialState","useReducer","state","action","_extends","createContext","defaultEasing","horizontalOffset","defaultOpacity","isTouchDevice","window","limitNumber","value","min","max","Math","limitScale","scale","buffer","test","navigator","userAgent","useEffect","useLayoutEffect","useEventListener","type","options","latest","wrapper","evt","addEventListener","removeEventListener","SlidePortal","_ref","container","document","body","rest","_objectWithoutPropertiesLoose","_excluded","createPortal","_jsx","CloseIcon","props","width","height","viewBox","children","d","ArrowLeft","ArrowRight","PreventScroll","style","lastOverflow","overflow","getMultipleTouchPosition","clientX","clientY","touches","length","nextClientX","nextClientY","sqrt","computePositionEdge","position","size","innerSize","currentWidth","outOffset","closedEdge","getPositionOnMoveOrScale","x","y","toScale","innerWidth","innerHeight","offsetX","offsetY","closedEdgeX","closedEdgeY","centerClientX","centerClientY","lastCX","lastCY","getRotateSize","rotate","isVertical","getSuitableImageSize","naturalWidth","naturalHeight","currentHeight","autoWidth","autoHeight","pause","useDebounceCallback","callback","leading","maxWait","wait","callbackRef","prev","trailingTimeout","clearTrailing","clearTimeout","useCallback","now","Date","apply","last","offset","setTimeout","cancel","rebound","start","bound","easeOutMove","defaultSpeed","t","easeOutQuart","end","speed","easing","complete","distance","startTime","frameId","calcMove","time","raf","cancelAnimationFrame","requestAnimationFrame","initialRect","T","L","W","H","FIT","useMountedRef","mountedRef","Spinner","className","_jsxs","fill","opacity","Photo","src","loaded","broken","onPhotoLoad","loadingElement","brokenElement","restProps","_Fragment","onLoad","e","target","onError","draggable","alt","touched","maskTouched","CX","CY","lastX","lastY","lastScale","touchTime","touchLength","stopRaf","reach","PhotoBox","item","render","customWidth","customHeight","originRef","visible","wrapClassName","onPhotoTap","onMaskTap","onReachMove","onReachUp","onPhotoResize","isActive","expose","updateState","initialTouchRef","mounted","onScale","onRotate","handleMove","currentTouchLength","isStillX","abs","isStillY","currentReach","horizontalCloseEdge","verticalCloseEdge","getReachType","initialTouchState","reachPosition","updateRaf","slideToPosition","X","spatial","Y","S","callbackS","nextScale","safeScale","touchedTime","beginEdgeX","beginX","beginEdgeY","beginY","moveTime","nextX","nextY","targetX","targetY","speedX","speedY","speedT","edgeX","edgeY","initialSpeed","lastTime","v","s","dt","direction","sign","a","f","ds","caf","scrollMove","isEdgeX","currentX","isEdgeY","currentY","resultX","resultY","useScrollPosition","handlePhotoTap","singleTap","continuousClick","debounceTap","currentClientX","currentClientY","doubleTap","useContinuousTap","handleUp","handleStart","handleMaskStart","preventDefault","passive","changedTouches","touch","useIsomorphicLayoutEffect","translateX","translateY","currentScale","easingMode","updateEasing","autoScale","realWidth","realHeight","realScale","execRef","lead","moveScale","async","useTargetScale","originRect","updateOriginRect","useState","updateEasingMode","initialTime","OK","handleToShape","currentShape","element","nodeType","top","left","getBoundingClientRect","tagName","getComputedStyle","objectFit","handleUpdateOrigin","useAnimationOrigin","centerWidth","centerHeight","miniMode","useAnimationPosition","isPause","transitionCSS","attrs","onMouseDown","stopPropagation","button","onTouchStart","onWheel","deltaY","transform","transition","willChange","params","bg","lastBg","overlay","minimal","PhotoSlider","loop","speedFn","easingFn","photoClosable","maskClosable","maskOpacity","pullClosable","bannerVisible","overlayRender","toolbarRender","maskClassName","photoClassName","photoWrapClassName","images","index","controlledIndex","onIndexChange","controlledIndexChange","onClose","afterClose","portalContainer","innerIndex","updateInnerIndex","isControlled","hasOwnProperty","virtualIndexRef","imageLength","currentImage","enableLoop","realVisible","activeAnimation","onAnimationEnd","handleRender","c","modifyRealVisible","initial","forkedRef","modify","next","useMemo","updater","useForkedVariable","useAnimationVisible","close","changeIndex","nextIndex","currentIndex","limitIndex","nextVirtualIndex","singlePageWidth","closeable","handleResize","handleReachMove","originOffsetClientX","offsetClientX","handleReachHorizontalMove","handleReachVerticalMove","handleReachUp","offsetClientY","willClose","currentTranslateX","adjacentImages","concat","slice","useAdjacentImages","currentOverlayVisible","currentOpacity","overlayParams","overlayVisible","currentSpeed","currentEasing","slideSpeed","slideEasing","role","onClick","background","transitionTimingFunction","transitionDuration","animationDuration","map","PhotoProvider","onVisibleChange","uniqueIdRef","methods","nextId","update","imageItem","findIndex","n","nextImages","splice","remove","filter","show","PhotoContext","Provider","PhotoView","triggers","photoContext","useContext","useInitial","useImperativeHandle","ref","eventName","eventFn","invokeChildrenFn","eventListeners","listener","bind","Children","only","cloneElement"],"mappings":"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"}